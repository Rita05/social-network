{"version":3,"file":"static/js/213.7a11e3df.chunk.js","mappings":"mLAcA,MAAMA,EAAmBC,IAAoB,CAC5CC,QAAQC,EAAAA,EAAAA,GAAcF,KAIVG,EAAkCC,IAUXC,EAAAA,EAAAA,IAAQN,EAARM,EARRC,IAC1B,MAAM,OAAEL,KAAWM,GAASD,EAC5B,OAAKL,GAGEO,EAAAA,EAAAA,KAACJ,EAAS,IAAMG,KAFfC,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAG,UAEgB,G,6ICxBhC,MAAMC,EAAYX,GAAyBA,EAAMY,UAAUC,MACrDC,EAAkBd,GAAyBA,EAAMY,UAAUG,YAC3DC,EAAehB,GAAyBA,EAAMY,UAAUK,SACxDC,EAAsBlB,GAAyBA,EAAMY,UAAUO,gBAC/DC,EAAkBpB,GAAyBA,EAAMY,UAAUS,YAC3DC,EAA0BtB,GAAyBA,EAAMY,UAAUW,oB,kCCkChF,MACA,EAAe,IAA0B,+D,gECpClC,MAAMC,EAAWC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sOAONC,EAAAA,EAAMC,OAAOC,QAO5BC,EAAcP,EAAAA,GAAOC,IAAGO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,4BAIxBM,EAAmBT,EAAAA,GAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,8EAM7BQ,EAAYX,EAAAA,GAAOY,IAAGC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,kIAIdC,EAAAA,EAAMC,OAAOS,SAKrBC,EAAWf,EAAAA,GAAOC,IAAGe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,uGAMrBc,EAAWjB,EAAAA,GAAOkB,KAAIC,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,uHAMtBiB,EAAapB,EAAAA,GAAOkB,KAAIG,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,+IAK3BC,EAAAA,EAAMC,OAAOiB,eAEVC,GAAqBvB,EAAAA,EAAAA,IAAOwB,EAAAA,EAAPxB,CAAcyB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,sTAI3BC,EAAAA,EAAMC,OAAOS,SAarBY,GAAkB1B,EAAAA,EAAAA,IAAOwB,EAAAA,EAAPxB,CAAc2B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,6IAQhCyB,EAAgB5B,EAAAA,GAAOY,IAAGiB,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,2C,gCCvDhC,MAAM2B,EAAQjD,IACpB,MACCkD,MAAM,GAAEC,EAAE,KAAEC,EAAI,OAAEC,EAAM,OAAEC,EAAM,SAAEC,IAC/BvD,GAEE,WAAEwD,EAAU,UAAEC,EAAS,WAAEC,EAAU,UAAEC,EAAS,WAAEC,IAAeC,EAAAA,EAAAA,IAAY,CAAEV,OAE7EW,GAAWC,EAAAA,EAAAA,KAEX9C,GAAsB+C,EAAAA,EAAAA,IAAYhD,GAElCiD,EAAS,CACdN,UAAWO,EAAAA,GAAIC,UAAUC,SAAST,GAClCC,cAGKS,EAAuBC,GAAmB,KAC/CR,GAASS,EAAAA,EAAAA,IAAOD,GAAQ,EA0BzB,OACCE,EAAAA,EAAAA,MAACtD,EAAQ,CAERuD,IAAKf,KACDF,EACJkB,MAAOT,EAAOU,SAAA,EAEdH,EAAAA,EAAAA,MAAC9C,EAAW,CAAAiD,SAAA,EACXzE,EAAAA,EAAAA,KAAC0E,EAAAA,GAAO,CAACxE,GAAE,YAAAyE,OAAc1B,GAAKwB,UAC7BzE,EAAAA,EAAAA,KAAC0B,EAAgB,CAAA+C,UAChBzE,EAAAA,EAAAA,KAAC4B,EAAS,CAACgD,IAAW,OAANzB,QAAM,IAANA,GAAAA,EAAQ0B,MAAc,OAAN1B,QAAM,IAANA,OAAM,EAANA,EAAQ0B,MAAQC,EAAAA,SAGlDR,EAAAA,EAAAA,MAACtC,EAAQ,CAAAyC,SAAA,EACRzE,EAAAA,EAAAA,KAACkC,EAAQ,CAAAuC,SACPvB,KAEFlD,EAAAA,EAAAA,KAACqC,EAAU,CAAAoC,SACTrB,IArC2B2B,MAChC,OACC1B,GACCrD,EAAAA,EAAAA,KAACwC,EAAkB,CAClBwC,SAAUjE,EAAoBkE,MAAKb,GAAUA,IAAWnB,IACxDiC,SAT2Bd,EASInB,EATe,KACjDW,GAASuB,EAAAA,EAAAA,IAASf,GAAQ,GAQYK,SAElC,kEAGFzE,EAAAA,EAAAA,KAACwC,EAAkB,CAClBwC,SAAUjE,EAAoBkE,MAAKb,GAAUA,IAAWnB,IACxDiC,QAASf,EAAoBlB,GAAIwB,SAEhC,uEAlB0BL,KAmBP,EAwBnBW,UAGH/E,EAAAA,EAAAA,KAAC2C,EAAe,IAAKW,KAAgBC,EAASkB,UAC7CzE,EAAAA,EAAAA,KAAC6C,EAAa,CAAC+B,IAAKQ,QAtBhBnC,EAwBK,ECxFAoC,EAAkBC,IAAgD,IAA/C,MAAEC,EAAK,SAAEd,GAAgCa,EACxE,OACCtF,EAAAA,EAAAA,KAACwF,EAAAA,GAAe,CAACD,MAAOA,EAAOE,SAAUC,EAAAA,GAA4BjB,SACnEA,GACgB,ECUpB,MACA,EAAe,IAA0B,0ECDzC,MACA,EAAe,IAA0B,2E,gBClBlC,MAAMkB,GAAsB1E,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0HAQhCwE,IAAa3E,EAAAA,EAAAA,IAAOwB,EAAAA,EAAPxB,CAAcQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,iQAClBtB,GAAUA,EAAM+F,OAAM,GAAAlB,OAAMtD,EAAAA,EAAMC,OAAOS,SAAY,YAChEjC,GAAUA,EAAM+F,OAAS,OAAS,SASrB/F,GAAUA,EAAM+F,OAAS,UAAY,YAIhDC,GAAW7E,EAAAA,GAAOkB,KAAIR,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,iDAKtB2E,IAAmB9E,EAAAA,EAAAA,IAAOwB,EAAAA,EAAPxB,CAAca,KAAAA,IAAAV,EAAAA,EAAAA,GAAA,qXAsBjC4E,GAA0B/E,EAAAA,GAAOY,IAAGI,KAAAA,IAAAb,EAAAA,EAAAA,GAAA,mFCOpC6E,GAAcnG,IAC1B,MAAM,SACLW,EAAQ,WACRyF,EAAU,YACVrF,EAAW,YACXN,EAAW,SACX4F,GACGrG,GAEGsG,EAAeC,IAAoBC,EAAAA,EAAAA,UAAiB,GAE3D,IAAIC,EAAuB,GAE3B,MAAMC,EAAaC,KAAKC,KAAKR,EAAazF,GAC1C8F,EAAQI,MAAMC,KAAK,CAAEC,OAAQL,IAAc,CAACM,EAAGC,IAAMA,EAAI,IAEzD,MAAMC,EAAeP,KAAKC,KAAKF,EAAajG,GACtC0G,GAAyBb,EAAgB,GAAK7F,EAAc,EAC5D2G,EAAyBd,EAAgB7F,EAKzC4G,EAAetG,EAAc,EAC7BuG,EAAehB,EAAgBY,EAwC/BK,EAAoBC,IACzBnB,EAASmB,EAAK,EAeTC,GAAkBC,EAAAA,EAAAA,UAAQ,KAC/B,MACMpB,EAAgBK,KAAKC,KAAK7F,EAAcN,GACxC0G,GAAyBb,EAAgB,GAAK7F,EAAc,EAC5D2G,EAAyBT,KAAKgB,IAAIrB,EAAgB7F,EAAa2F,GAE/DwB,EAAmBjB,KAAKkB,IAAI9G,EAAc,EAAGoG,GAI7CW,EAHoBnB,KAAKgB,IAAI5G,EAAc,EAAGqG,GAGJA,EAEhD,IAAIW,EAAS,GAYb,OAf2BH,EAAmBT,GAM7CY,EAAOC,KAAK,OAGbD,EAAOC,QAzGKC,EAACC,EAAeC,KAC7B,IAAIpB,EAASoB,EAAMD,EAAQ,EAC3B,OAAOrB,MAAMC,KAAK,CAAEC,WAAU,CAACC,EAAGoB,IAAQA,EAAMF,GAAM,EAuGtCD,CAAMd,EAAuBC,IAExCU,GACHC,EAAOC,KAAK,OAGND,CAAM,GACX,CAAC3B,EAAYrF,EAAaN,IAiC7B,OACC+D,EAAAA,EAAAA,MAACqB,GAAmB,CAAAlB,SAAA,EACnBzE,EAAAA,EAAAA,KAAC+F,GAAgB,CAACb,QAjBSiD,KAC5Bd,EAAiBxG,EAAc,GAC3BA,IAAgBoG,GAAyC,IAAhBpG,GAC5CwF,EAAiBD,EAAgB,EAClC,EAakDpB,UAAWmC,EAAa1C,UACxEzE,EAAAA,EAAAA,KAACgG,GAAuB,CAACpB,IAAKwD,MAjCzBb,EAELc,KAAI,CAACf,EAAMgB,IACE,QAAThB,GACItH,EAAAA,EAAAA,KAAC8F,GAAQ,CAAArB,SAAc6C,GAARgB,IAItBtI,EAAAA,EAAAA,KAAC4F,GAAU,CAAYC,OAAQyB,IAASzG,EAAaqE,QAASA,IAAMmC,EAAiBkB,OAAOjB,IAAO7C,SACjG6C,GADeA,MA4BnBtH,EAAAA,EAAAA,KAAC+F,GAAgB,CAACb,QAdSsD,KAC5BnB,EAAiBxG,EAAc,GAE3BA,IAAgBqG,GACnBb,EAAiBD,EAAgB,EAClC,EASkDpB,UAAWoC,EAAa3C,UACxEzE,EAAAA,EAAAA,KAACgG,GAAuB,CAACpB,IAAK6D,QAEV,E,wDCvMjB,MAAMC,IAAiBzH,EAAAA,EAAAA,IAAO0H,GAAAA,EAAP1H,CAAwBE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,gFAMzCwH,IAA0B3H,EAAAA,EAAAA,IAAO4H,GAAAA,EAAP5H,CAAcQ,KAAAA,IAAAL,EAAAA,EAAAA,GAAA,ydAM/BC,EAAAA,EAAMC,OAAOC,OAG7BuH,GAAAA,GAKFC,GAAAA,GAMmB1H,EAAAA,EAAMC,OAAOC,QAMvByH,GAAe/H,EAAAA,GAAOC,IAAGS,KAAAA,IAAAP,EAAAA,EAAAA,GAAA,QCVhC6H,GAAc,CACnBC,IAAK,qBACL7F,SAAU,qEACV8F,WAAY,kFAOAC,GAAatJ,IAEzB,MAAM,MACLO,EAAK,gBACLM,EAAe,SACfF,EAAQ,YACRI,EAAW,YACXN,EAAW,WACX8I,EAAU,aACVC,EAAY,SACZC,EAAQ,aACRC,GACG1J,GAEG2J,EAAqBC,IAA0BpD,EAAAA,EAAAA,UAAS,IAEzDqD,GAAgB7F,EAAAA,EAAAA,IAAY8F,EAAAA,GAE5BC,GAAUC,EAAAA,EAAAA,KACfC,EAAAA,EAAAA,IAAUC,EAAAA,KACVD,EAAAA,EAAAA,IAAUE,EAAAA,GAAgB,CACzBC,iBAAkBC,EAAAA,MAIdC,EAAqBC,OAAOC,QAAQrB,IAAaZ,KAAI/C,IAAA,IAAEiF,EAAKC,GAAMlF,EAAA,MAAM,CAC7EmF,MAAOF,EACPC,QACA,IAMKrG,EAAuBC,IAC5BiF,EAAWjF,EAAO,EAGbsG,EAAyBtG,IAC9BkF,EAAalF,EAAO,EA6BrB,OACCE,EAAAA,EAAAA,MAACoE,GAAc,CAAAjE,SAAA,EACdzE,EAAAA,EAAAA,KAAC4I,GAAuB,CACvB4B,MAAOf,EACPtD,SAAWwE,IA1CkBH,SA0CoC,OAANG,QAAM,IAANA,OAAM,EAANA,EAAQH,QAzC5Dd,EAAuBkB,OAAOJ,GAyCqC,EAC1EK,QAAST,IAES,YAAlBT,GACG3J,EAAAA,EAAAA,KAAC8K,GAAAA,EAAS,KAEZxG,EAAAA,EAAAA,MAAAyG,EAAAA,SAAA,CAAAtG,SAAA,EACCzE,EAAAA,EAAAA,KAACgL,EAAAA,GAAU,CACVnB,QAASA,EACToB,mBAAoBC,EAAAA,GACpBC,UAAW,CAACC,EAAAA,IACZC,UAzCiBC,IACtB,MAAM,OAAEzF,EAAM,KAAE0F,GAASD,EACzB,GAAIC,GAAQ1F,EAAO5C,KAAOsI,EAAKtI,GAAI,CAClC,MAAMuI,EAAgB,OAALnL,QAAK,IAALA,OAAK,EAALA,EAAOoL,WAAWzI,GAASA,EAAKC,KAAO4C,EAAO5C,KACzDyI,EAAWrL,EAAMoL,WAAWzI,GAASA,EAAKC,MAAW,OAAJsI,QAAI,IAAJA,OAAI,EAAJA,EAAMtI,MACvD0I,GAAWC,EAAAA,EAAAA,IAAUvL,EAAOmL,EAAUE,GAC5CnC,EAASoC,EAEV,GAiC8BlH,UAEzBzE,EAAAA,EAAAA,KAACqF,EAAe,CAACE,MAAOlF,EAAMgI,KAAIrF,GAAQA,EAAKC,KAAIwB,UAClDzE,EAAAA,EAAAA,KAACgJ,GAAY,CAAAvE,SAEXpE,EAAMgI,KAAKrF,IACV,MAAM,GAAEC,GAAOD,EACf,OACChD,EAAAA,EAAAA,KAAC+C,EAAI,CAEJC,KAAMA,EACN6I,aAAc1H,EACd2H,eAAgBpB,GAHXzH,EAIJ,UA3CY8I,MACxB,GAAqB,IAAjB1L,EAAMwG,QAA0B,OAAVxG,EAG1B,OACCL,EAAAA,EAAAA,KAACiG,GAAU,CACVxF,SAAUA,EACVI,YAAaA,EACbN,YAAaA,EACb2F,WAAYvF,EACZwF,SAAUqD,GACT,EAuCEuC,QAGa,E,0BC1Gb,MAAMC,WAAcpM,EAAAA,UAE1BqM,WAAAA,CAAYnM,GACXoM,MAAMpM,GAAO,KAQduH,iBAAoBC,IACnB,MAAM,SAAE7G,GAAa0L,KAAKrM,MAC1BqM,KAAKrM,MAAMsM,aAAa9E,EAAM7G,EAAS,CATxC,CAEA4L,iBAAAA,GACC,MAAM,YAAExL,EAAW,SAAEJ,GAAa0L,KAAKrM,MACvCqM,KAAKrM,MAAMsM,aAAavL,EAAaJ,EACtC,CAOA6L,MAAAA,GAEC,OACCtM,EAAAA,EAAAA,KAACoJ,GAAS,CACTI,aAAc2C,KAAK9E,oBACf8E,KAAKrM,OAGZ,EAID,MAUMyM,GAAkD,CACvDlD,WAAYmD,GAAAA,GACZlD,aAAcmD,GAAAA,GACdlD,SAAUmD,GAAAA,GACVN,aACD,MAEa1D,IAAiBiE,EAAAA,EAAAA,KAAuB9M,EAAAA,EAAAA,KAjB5BL,IACjB,CACNa,MAAOF,EAASX,GAChBiB,SAAUD,EAAYhB,GACtBqB,YAAaD,EAAepB,GAC5Be,YAAaD,EAAed,GAC5BmB,gBAAiBD,EAAmBlB,MAWwC+M,IAAqB5M,GAAAA,EAArEgN,CAAuFX,G,kCCtF9G,MAAMpC,EAAoBpK,GAAyBA,EAAMoN,OAAOxJ,M","sources":["common/hocs/withAuthRedirect.tsx","features/menu-sidebar/Users/model/users-selectors.ts","assets/icons/dots-three.svg","features/menu-sidebar/Users/ui/User/User.styled.tsx","features/menu-sidebar/Users/ui/User/User.tsx","common/components/SortableWrapper.tsx","assets/icons/left-arrow-pagination.svg","assets/icons/right-arrow-pagination.svg","common/components/Pagination/Pagination.styled.tsx","common/components/Pagination/Pagination.tsx","features/menu-sidebar/Users/ui/UsersList/UsersList.styled.tsx","features/menu-sidebar/Users/ui/UsersList/UsersList.tsx","features/menu-sidebar/Users/ui/UsersList/UsersContainer.tsx","models/selectors/requestStatus-selectors.ts"],"sourcesContent":["import React, { ComponentType } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\n//selectors\nimport { getIsAuthUser } from \"../../features/login/model/auth-selectors\";\n\n//types\nimport { rootStoreType } from \"../../app/store\";\n\ntype MapStatePropsType = {\n\tisAuth: boolean\n}\n\nconst mapStateToProps = (state: rootStoreType): MapStatePropsType => ({\n\tisAuth: getIsAuthUser(state)\n})\n\n\nexport const withAuthRedirect = <T extends {}>(Component: ComponentType<T>) => {\n\n\tconst RedirectComponent = (props: MapStatePropsType) => {\n\t\tconst { isAuth, ...rest } = props;\n\t\tif (!isAuth) {\n\t\t\treturn <Navigate to=\"/login\" />;\n\t\t}\n\t\treturn <Component {...(rest as T)} />;\n\t};\n\n\tconst ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\n\treturn ConnectedRedirectComponent;\n}\n\n","import { rootStoreType } from \"../../../../app/store\";\n\nexport const getUsers = (state: rootStoreType) => state.usersPage.users;\nexport const getportionSize = (state: rootStoreType) => state.usersPage.portionSize;\nexport const getPageSize = (state: rootStoreType) => state.usersPage.pageSize;\nexport const getTotalUsersCount = (state: rootStoreType) => state.usersPage.totalUsersCount;\nexport const getCurrentPage = (state: rootStoreType) => state.usersPage.currentPage;\nexport const getFollowingInProgress = (state: rootStoreType) => state.usersPage.followingInProgress;","var _rect, _circle, _circle2, _circle3;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgDotsThree(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 256 256\",\n    id: \"DotsThree\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 256,\n    height: 256,\n    fill: \"none\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 128,\n    cy: 128,\n    r: 16,\n    fill: \"#2157f2\",\n    className: \"color000000 svgShape\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 64,\n    cy: 128,\n    r: 16,\n    fill: \"#2157f2\",\n    className: \"color000000 svgShape\"\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 192,\n    cy: 128,\n    r: 16,\n    fill: \"#2157f2\",\n    className: \"color000000 svgShape\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgDotsThree);\nexport default __webpack_public_path__ + \"static/media/dots-three.1898bd3a23ab24f02d9db7bba8f915a1.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\nimport { theme } from \"../../../../../styles/Theme\";\n\n//components\nimport { Button } from \"../../../../../elements/ui/button/Button\";\n\nexport const UserCard = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tmin-height: 68px;\n\theight: auto;\n\tpadding: 12px 0;\n\tborder-bottom: 1px solid ${theme.colors.border};\n\n\t&:last-of-type {\n\t\tborder-bottom: none;\n\t}\n`\n\nexport const UserDetails = styled.div`\n\tdisplay: flex;\n`\n\nexport const UserPhotoWrapper = styled.div`\n\tdisplay: flex;\n\talign-self: flex-start;\n\tmargin-right: 15px;\n`\n\nexport const UserPhoto = styled.img`\n\twidth: 72px;\n\theight: 72px;\n\tborder-radius: 50%;\n\tborder: 2px solid ${theme.colors.primary};\n\tpadding: 2px;\n\tobject-fit: cover;\n`\n\nexport const UserInfo = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-self: flex-start;\n\tpadding-top: 5px;\n`\nexport const UserName = styled.span`\n\tfont-family: Montserrat-Bold, sans-serif;\n\tfont-size: 15px;\n\tfont-weight: 700;\n\tmargin-bottom: 6px;\n`\nexport const UserStatus = styled.span`\n\tfont-family: Montserrat-Alternates, sans-serif;\n\tfont-size: 13px;\n\tfont-weight: 500;\n\tword-break: break-word;\n\tcolor: ${theme.colors.secondaryFont};\n`\nexport const SubscriptionButton = styled(Button)`\n\tfont-family: Montserrat-Alternates, sans-serif;\n\twidth: fit-content;\n\theight: 28px;\n\tbackground-color: ${theme.colors.primary};\n\tborder: none;\n\tborder-radius: 6px;\n\tmargin-top: 11px;\n\tmargin-bottom: 3px;\n\tcolor: white;\n\tfont-size: 14px;\n\tfont-weight: 600;\n\n\t&:disabled {\n\t\topacity: 0.5;\n\t}\n`\nexport const DraggableButton = styled(Button)`\n\tdisplay: flex;\n\talign-self: flex-start;\n\toutline: none;\n\tborder: none;\n\tcursor: grab;\n\tbackground-color: transparent;\n`\nexport const DraggableIcon = styled.img`\n\twidth: 24px;\n\theight: 24px;\n`\n","import { useSelector } from 'react-redux';\n\n//actions\nimport { getFollowingInProgress } from '../../model/users-selectors';\nimport { useAppDispatch } from '../../../../../app/store';\n\n//thunks\nimport { follow, unFollow } from '../../model/users-reducer';\n\n//icons\nimport defaultUser from '../../../../../assets/icons/default-avatar.svg';\nimport draggableUsersIcon from '../../../../../assets/icons/dots-three.svg';\n\n//styles\nimport { DraggableButton, DraggableIcon, UserCard, SubscriptionButton, UserInfo, UserName, UserPhoto, UserPhotoWrapper, UserStatus, UserDetails } from \"./User.styled\";\nimport { CSS } from '@dnd-kit/utilities';\n\n//types\nimport { User as UserType } from \"../../../../../common/types/users\";\nimport { useSortable } from '@dnd-kit/sortable';\nimport { NavLink } from 'react-router-dom';\n\nexport type UserPropsType = {\n\tuser: UserType,\n\tonFollowUser: (userId: number) => void,\n\tonUnfollowUser: (userId: number) => void,\n}\n\nexport const User = (props: UserPropsType) => {\n\tconst {\n\t\tuser: { id, name, photos, status, followed }\n\t} = props;\n\n\tconst { attributes, listeners, setNodeRef, transform, transition } = useSortable({ id });\n\n\tconst dispatch = useAppDispatch();\n\n\tconst followingInProgress = useSelector(getFollowingInProgress);\n\n\tconst styles = {\n\t\ttransform: CSS.Transform.toString(transform),\n\t\ttransition,\n\t};\n\n\tconst handleSubscribeUser = (userId: number) => () => {\n\t\tdispatch(follow(userId));\n\t}\n\n\tconst handleUnSubscribeUser = (userId: number) => () => {\n\t\tdispatch(unFollow(userId));\n\t}\n\n\tconst renderSubscriptionButton = () => {\n\t\treturn (\n\t\t\tfollowed ? (\n\t\t\t\t<SubscriptionButton\n\t\t\t\t\tdisabled={followingInProgress.some(userId => userId === id)}\n\t\t\t\t\tonClick={handleUnSubscribeUser(id)}\n\t\t\t\t>\n\t\t\t\t\t{'Отписаться'}\n\t\t\t\t</SubscriptionButton>\n\t\t\t) :\n\t\t\t\t<SubscriptionButton\n\t\t\t\t\tdisabled={followingInProgress.some(userId => userId === id)}\n\t\t\t\t\tonClick={handleSubscribeUser(id)}\n\t\t\t\t>\n\t\t\t\t\t{'Подписаться'}\n\t\t\t\t</SubscriptionButton>\n\t\t)\n\t}\n\n\treturn (\n\t\t<UserCard\n\t\t\tkey={id}\n\t\t\tref={setNodeRef}\n\t\t\t{...attributes}\n\t\t\tstyle={styles}\n\t\t>\n\t\t\t<UserDetails>\n\t\t\t\t<NavLink to={`/profile/${id}`}>\n\t\t\t\t\t<UserPhotoWrapper>\n\t\t\t\t\t\t<UserPhoto src={photos?.small ? photos?.small : defaultUser} />\n\t\t\t\t\t</UserPhotoWrapper>\n\t\t\t\t</NavLink>\n\t\t\t\t<UserInfo>\n\t\t\t\t\t<UserName>\n\t\t\t\t\t\t{name}\n\t\t\t\t\t</UserName>\n\t\t\t\t\t<UserStatus>\n\t\t\t\t\t\t{status}\n\t\t\t\t\t</UserStatus>\n\t\t\t\t\t{renderSubscriptionButton()}\n\t\t\t\t</UserInfo>\n\t\t\t</UserDetails>\n\t\t\t<DraggableButton {...attributes} {...listeners}>\n\t\t\t\t<DraggableIcon src={draggableUsersIcon} />\n\t\t\t</DraggableButton>\n\t\t</UserCard>\n\t)\n}\n\n\n","import React, { ReactNode } from 'react';\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\n\ninterface SortableWrapperProps {\n\titems: Array<string | number>,\n\tchildren: ReactNode;\n}\n\n\nexport const SortableWrapper = ({ items, children }: SortableWrapperProps) => {\n\treturn (\n\t\t<SortableContext items={items} strategy={verticalListSortingStrategy}>\n\t\t\t{children}\n\t\t</SortableContext>\n\t);\n};\n\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgLeftArrowPagination(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    id: \"leftarrow\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m8.5 12.8 5.7 5.6c.4.4 1 .4 1.4 0 .4-.4.4-1 0-1.4l-4.9-5 4.9-5c.4-.4.4-1 0-1.4-.2-.2-.4-.3-.7-.3-.3 0-.5.1-.7.3l-5.7 5.6c-.4.5-.4 1.1 0 1.6 0-.1 0-.1 0 0z\",\n    fill: \"#171819\",\n    className: \"color000000 svgShape\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLeftArrowPagination);\nexport default __webpack_public_path__ + \"static/media/left-arrow-pagination.9eea576ebfd61674a4d063a72e5302f4.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgRightArrowPagination(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    id: \"RightArrow\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#171819\",\n    d: \"M9.172 18.657a1 1 0 0 1-.707-1.707l4.95-4.95-4.95-4.95a1 1 0 0 1 1.414-1.414l5.656 5.657a1 1 0 0 1 0 1.414L9.88 18.364a.997.997 0 0 1-.707.293Z\",\n    className: \"color6563ff svgShape\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgRightArrowPagination);\nexport default __webpack_public_path__ + \"static/media/right-arrow-pagination.7a7c2932299052846a191447b481d960.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\nimport { theme } from \"../../../styles/Theme\";\n\n//components\nimport { Button } from \"../../../elements/ui/button/Button\";\n\nexport const PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  border-radius: 10px;\n`;\n\nexport const PageNumber = styled(Button) <{ active: boolean }>`\n  background-color: ${props => (props.active ? `${theme.colors.primary}` : '#e0e0e0')};\n  color: ${props => (props.active ? '#fff' : '#000')};\n  border: none;\n  border-radius: 12px;\n  margin: 0 5px;\n  padding: 10px 15px;\n  cursor: pointer;\n  font-size: 16px;\n  transition: background-color 0.3s;\n  &:hover {\n    background-color: ${props => (props.active ? '#4a71d4' : '#d0d0d0')};\n  }\n`;\n\nexport const Ellipsis = styled.span`\n  margin: 0 10px;\n  font-size: 16px;\n`;\n\nexport const PaginationButton = styled(Button)`\n  display: flex;\n  align-items: center;\n\tbackground-color: #e0e0e0;\n\tborder: none;\n\tborder-radius: 12px;\n\tmargin: 0 5px;\n  padding: 9px 9px;\n\tcursor: pointer;\n\tfont-size: 16px;\n\ttransition: background-color 0.3s;\n\n\t&:hover {\n\t\tbackground-color: #d0d0d0;\n\t}\n\n\t&:disabled {\n\t\tbackground-color: #f0f0f0;\n\t\tcursor: not-allowed;\n\t}\n`\n\nexport const PaginationDirectionIcon = styled.img`\n  display: flex;\n  width: 21px;\n  height: 21px;\n  object-fit: cover;\n`\n","import React, { useMemo, useState } from 'react';\nimport styled from 'styled-components';\n\n//icons \nimport leftArrow from '../../../assets/icons/left-arrow-pagination.svg';\nimport rightArrow from '../../../assets/icons/right-arrow-pagination.svg';\n\n//styles\nimport { Ellipsis, PageNumber, PaginationButton, PaginationContainer, PaginationDirectionIcon } from './Pagination.styled';\n\n\n// interface IPaginationProps {\n// \tpages: Array<number>\n// \tcurrentPage: number\n// \tonChange: (page: number) => void\n// }\n\n\n// export const Pagination = (props: IPaginationProps) => {\n// \tconst {\n// \t\tpages,\n// \t\tcurrentPage,\n// \t\tonChange\n// \t} = props;\n\n\n// \treturn (\n// \t\t<div>\n// \t\t\t{pages.map((page) => {\n\n// \t\t\t\tconst handleChangePage = () => onChange(page)\n\n// \t\t\t\treturn (\n// \t\t\t\t\t<SelectedPage\n// \t\t\t\t\t\tactive={page === currentPage}\n// \t\t\t\t\t\tonClick={handleChangePage}\n// \t\t\t\t\t>\n// \t\t\t\t\t\t{page}\n// \t\t\t\t\t</SelectedPage>\n// \t\t\t\t)\n// \t\t\t})}\n// \t\t</div>\n// \t)\n// }\n\n\n\n\ninterface IPaginationProps {\n\tpageSize: number\n\tcurrentPage: number\n\tportionSize: number\n\ttotalPages: number\n\tonChange: (page: number) => void\n}\n\nconst range = (start: number, end: number) => {\n\tlet length = end - start + 1;\n\treturn Array.from({ length }, (_, idx) => idx + start);\n};\n\nexport const DOTS = '...';\n\nexport const Pagination = (props: IPaginationProps) => {\n\tconst {\n\t\tpageSize,\n\t\ttotalPages,\n\t\tcurrentPage,\n\t\tportionSize,\n\t\tonChange\n\t} = props;\n\n\tconst [portionNumber, setPortionNumber] = useState<number>(1);\n\n\tlet pages: Array<number> = [];\n\n\tconst pagesCount = Math.ceil(totalPages / pageSize);\n\tpages = Array.from({ length: pagesCount }, (_, i) => i + 1);\n\n\tconst portionCount = Math.ceil(pagesCount / portionSize);\n\tconst leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n\tconst rightPortionPageNumber = portionNumber * portionSize;\n\n\t// const isFirstPage = currentPage === 1\n\t// const isLastPage = currentPage === totalPages\n\n\tconst isPrevButton = currentPage > 1;\n\tconst isNextButton = portionNumber < portionCount;\n\n\t// const renderPageNumbers = () => {\n\t// \tconst pageNumbers = [];\n\t// \tfor (let i = 1; i <= pages.length; i++) {\n\t// \t\tif (i === 1 || i === pages.length || (i >= currentPage - 1 && i <= currentPage + 1)) {\n\t// \t\t\tpageNumbers.push(\n\t// \t\t\t\t<PageNumber key={i} active={i === currentPage} onClick={() => onChange(i)}>\n\t// \t\t\t\t\t{i}\n\t// \t\t\t\t</PageNumber>\n\t// \t\t\t);\n\t// \t\t} else if (i === currentPage - 2 || i === currentPage + 2) {\n\t// \t\t\tpageNumbers.push(<Ellipsis key={i}>...</Ellipsis>);\n\t// \t\t}\n\t// \t}\n\t// \treturn pageNumbers;\n\t// };\n\n\n\n\t// const renderPageNumbers = () => {\n\t// \treturn pages.map((page, index) => {\n\t// \t\tif (page === 1 || page === totalPages || (page >= currentPage - 1 && page <= currentPage + 1)) {\n\t// \t\t\treturn (\n\t// \t\t\t\t<PageNumber\n\t// \t\t\t\t\tkey={page}\n\t// \t\t\t\t\tactive={page === currentPage}\n\t// \t\t\t\t\tonClick={handleChangePage(page)}\n\t// \t\t\t\t>\n\t// \t\t\t\t\t{page}\n\t// \t\t\t\t</PageNumber>\n\t// \t\t\t);\n\t// \t\t} else if (page === currentPage - 2 || page === currentPage + 2) {\n\t// \t\t\treturn <Ellipsis key={index}>...</Ellipsis>;\n\t// \t\t}\n\t// \t\treturn null;\n\t// \t});\n\t// };\n\n\n\tconst handleChangePage = (page: number) => {\n\t\tonChange(page)\n\t}\n\n\t// const renderPageNumbers = () => {\n\t// \treturn pages\n\t// \t\t.filter((page) => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\n\t// \t\t.map((page) => {\n\t// \t\t\treturn (\n\t// \t\t\t\t<PageNumber key={page} active={page === currentPage} onClick={() => handleChangePage(page)}>\n\t// \t\t\t\t\t{page}\n\t// \t\t\t\t</PageNumber>\n\t// \t\t\t)\n\t// \t\t})\n\t// };\n\n\tconst paginationRange = useMemo(() => {\n\t\tconst totalPageNumbers = portionSize;\n\t\tconst portionNumber = Math.ceil(currentPage / portionSize);\n\t\tconst leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n\t\tconst rightPortionPageNumber = Math.min(portionNumber * portionSize, totalPages);\n\n\t\tconst leftSiblingIndex = Math.max(currentPage - 1, leftPortionPageNumber);\n\t\tconst rightSiblingIndex = Math.min(currentPage + 1, rightPortionPageNumber);\n\n\t\tconst shouldShowLeftDots = leftSiblingIndex > leftPortionPageNumber;\n\t\tconst shouldShowRightDots = rightSiblingIndex < rightPortionPageNumber;\n\n\t\tlet result = [];\n\n\t\tif (shouldShowLeftDots) {\n\t\t\tresult.push('...');\n\t\t}\n\n\t\tresult.push(...range(leftPortionPageNumber, rightPortionPageNumber));\n\n\t\tif (shouldShowRightDots) {\n\t\t\tresult.push('...');\n\t\t}\n\n\t\treturn result;\n\t}, [totalPages, currentPage, portionSize]);\n\n\tconst renderPageNumbers = () => {\n\t\treturn paginationRange\n\t\t\t// .filter((page) => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\n\t\t\t.map((page, index) => {\n\t\t\t\tif (page === '...') {\n\t\t\t\t\treturn <Ellipsis key={index}>{page}</Ellipsis>;\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<PageNumber key={page} active={page === currentPage} onClick={() => handleChangePage(Number(page))}>\n\t\t\t\t\t\t{page}\n\t\t\t\t\t</PageNumber>\n\t\t\t\t);\n\t\t\t});\n\t};\n\n\tconst handleChangePrevPage = () => {\n\t\thandleChangePage(currentPage - 1);\n\t\tif (currentPage === leftPortionPageNumber && currentPage !== 1) {\n\t\t\tsetPortionNumber(portionNumber - 1);\n\t\t}\n\t}\n\n\tconst handleChangeNextPage = () => {\n\t\thandleChangePage(currentPage + 1);\n\n\t\tif (currentPage === rightPortionPageNumber) {\n\t\t\tsetPortionNumber(portionNumber + 1);\n\t\t}\n\t}\n\n\treturn (\n\t\t<PaginationContainer>\n\t\t\t<PaginationButton onClick={handleChangePrevPage} disabled={!isPrevButton}>\n\t\t\t\t<PaginationDirectionIcon src={leftArrow} />\n\t\t\t</PaginationButton>\n\t\t\t{renderPageNumbers()}\n\t\t\t<PaginationButton onClick={handleChangeNextPage} disabled={!isNextButton}>\n\t\t\t\t<PaginationDirectionIcon src={rightArrow} />\n\t\t\t</PaginationButton>\n\t\t</PaginationContainer>\n\t);\n};\n\n\n","\nimport styled from \"styled-components\";\n\n//components\nimport { Select } from \"../../../../../elements/ui/select/Select\";\n\n//styles\nimport { StyledOptions, StyledText } from \"../../../../../elements/ui/select/Select.styled\";\nimport { theme } from \"../../../../../styles/Theme\";\nimport { ContentContainer } from \"../../../../../common/components/Container.styled\";\n\nexport const UsersContainer = styled(ContentContainer)`\n\tmin-height: fit-content;\n\tmargin-bottom: 16px;\n\tpadding: 20px;\n`\n\nexport const UsersSubscriptionSelect = styled(Select)`\n\t\twidth: 150px;\n\t\theight: 16px;\n\t\tfont-size: 13px;\n\t\tpadding: 7px 12px 9px;\n\t\tmargin-bottom: 8px;\n\t\tborder: 1px solid ${theme.colors.border};\n\t\tborder-radius: 6px;\n  \n    ${StyledText} {\n\t\t\tfont-size: 14px;\n\t\t\toverflow: hidden;\n    }\n\n\t\t${StyledOptions} {\n\t\t\twidth: max-content;\n\t\t\tmin-width: 150px;\n\t\t\tright: 0;\n    \tleft: 0;\n\t\t\ttransform: translateY(20%);\n\t\t\tborder: 1px solid ${theme.colors.border};\n\t\t\tborder-radius: 6px;\n    \tpadding: 7px 12px 9px;\n\t\t}\n`\n\nexport const UsersContent = styled.div``\n\n","import { useState } from 'react';\nimport {\n\tDndContext,\n\tclosestCenter,\n\tKeyboardSensor,\n\tPointerSensor,\n\tuseSensor,\n\tuseSensors,\n\tDragEndEvent,\n} from '@dnd-kit/core';\nimport {\n\tarrayMove,\n\tsortableKeyboardCoordinates,\n} from '@dnd-kit/sortable';\nimport { restrictToParentElement } from \"@dnd-kit/modifiers\";\n\n//selectors\nimport { getRequestStatus } from '../../../../../models/selectors';\n\n//componets\nimport { User } from \"../User/User\";\nimport { SortableWrapper } from \"../../../../../common/components/SortableWrapper\";\nimport { SelectOption, SingleSelectValue } from \"../../../../../elements/ui/select/Select\";\nimport { Pagination } from '../../../../../common/components/Pagination/Pagination';\nimport { Preloader } from '../../../../../elements/ui/preloader/Preloader';\n\n//types\nimport { UsersContainerPropsType } from './UsersContainer';\n\n//styles\nimport { UsersContainer, UsersSubscriptionSelect, UsersContent } from \"./UsersList.styled\";\nimport { useSelector } from 'react-redux';\n\nconst usersStatus = {\n\tall: 'Все',\n\tfollowed: 'Подписанный',\n\tunfollowed: 'Неподписанный'\n}\n\nexport type UsersPropsType = UsersContainerPropsType & {\n\tonChangePage: (page: number) => void\n}\n\nexport const UsersList = (props: UsersPropsType) => {\n\n\tconst {\n\t\tusers,\n\t\ttotalUsersCount,\n\t\tpageSize,\n\t\tcurrentPage,\n\t\tportionSize,\n\t\tfollowUser,\n\t\tunfollowUser,\n\t\tdragUser,\n\t\tonChangePage,\n\t} = props;\n\n\tconst [selectedUsersStatus, setSelectedUsersStatus] = useState('');\n\n\tconst requestStatus = useSelector(getRequestStatus);\n\n\tconst sensors = useSensors(\n\t\tuseSensor(PointerSensor),\n\t\tuseSensor(KeyboardSensor, {\n\t\t\tcoordinateGetter: sortableKeyboardCoordinates,\n\t\t})\n\t);\n\n\tconst usersStatusOptions = Object.entries(usersStatus).map(([key, value]) => ({\n\t\tlabel: key,\n\t\tvalue\n\t}));\n\n\tconst handleUserStatusChange = (value: SingleSelectValue) => {\n\t\tvalue && setSelectedUsersStatus(String(value));\n\t}\n\n\tconst handleSubscribeUser = (userId: number) => {\n\t\tfollowUser(userId)\n\t}\n\n\tconst handleUnSubscribeUser = (userId: number) => {\n\t\tunfollowUser(userId)\n\t}\n\n\tconst handleDragEnd = (event: DragEndEvent) => {\n\t\tconst { active, over } = event;\n\t\tif (over && active.id !== over.id) {\n\t\t\tconst oldIndex = users?.findIndex((user) => user.id === active.id);\n\t\t\tconst newIndex = users.findIndex((user) => user.id === over?.id);\n\t\t\tconst newUsers = arrayMove(users, oldIndex, newIndex);\n\t\t\tdragUser(newUsers);\n\n\t\t}\n\t}\n\n\tconst renderPagination = () => {\n\t\tif (users.length === 0 || users === null) {\n\t\t\treturn;\n\t\t}\n\t\treturn (\n\t\t\t<Pagination\n\t\t\t\tpageSize={pageSize}\n\t\t\t\tcurrentPage={currentPage}\n\t\t\t\tportionSize={portionSize}\n\t\t\t\ttotalPages={totalUsersCount}\n\t\t\t\tonChange={onChangePage}\n\t\t\t/>\n\t\t)\n\t}\n\n\treturn (\n\t\t<UsersContainer>\n\t\t\t<UsersSubscriptionSelect\n\t\t\t\tvalue={selectedUsersStatus}\n\t\t\t\tonChange={(option: SelectOption) => handleUserStatusChange(option?.value)}\n\t\t\t\toptions={usersStatusOptions}\n\t\t\t/>\n\t\t\t{requestStatus === 'loading'\n\t\t\t\t? (<Preloader />)\n\t\t\t\t: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<DndContext\n\t\t\t\t\t\t\tsensors={sensors}\n\t\t\t\t\t\t\tcollisionDetection={closestCenter}\n\t\t\t\t\t\t\tmodifiers={[restrictToParentElement]}\n\t\t\t\t\t\t\tonDragEnd={handleDragEnd}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<SortableWrapper items={users.map(user => user.id)}>\n\t\t\t\t\t\t\t\t<UsersContent>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tusers.map((user) => {\n\t\t\t\t\t\t\t\t\t\t\tconst { id } = user;\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<User\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFollowUser={handleSubscribeUser}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonUnfollowUser={handleUnSubscribeUser}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</UsersContent>\n\t\t\t\t\t\t\t</SortableWrapper>\n\t\t\t\t\t\t</DndContext>\n\t\t\t\t\t\t{renderPagination()}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t</UsersContainer >\n\t)\n}\n","import React, { ComponentType, Component } from \"react\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\n\n//components\nimport { UsersList } from \"./UsersList\";\n\n//hoc\nimport { withAuthRedirect } from \"../../../../../common/hocs/withAuthRedirect\";\n\n//actions\nimport { dragUserAction, followAction, unFollowAction } from \"../../../../../models/actions\";\n\n//selectors\nimport { getUsers, getCurrentPage, getPageSize, getportionSize, getTotalUsersCount } from \"../../../../../models/selectors\";\n\n//types\nimport { rootStoreType } from \"../../../../../app/store\";\nimport { requestUsers, UsersPageType } from \"../../model/users-reducer\";\nimport { User } from \"../../../../../common/types/users\";\n\n\ntype UsersMapStateToPropsType = {\n\tusers: Array<User>\n\tpageSize: number\n\tcurrentPage: number\n\tportionSize: number\n\ttotalUsersCount: number\n}\n\ntype UsersMapDispatchToPropsType = {\n\tfollowUser: (userId: number) => void\n\tunfollowUser: (userId: number) => void\n\tdragUser: (users: Array<User>) => void\n\trequestUsers: (currentPage: number, pageSize: number) => void\n}\n\nexport type UsersContainerPropsType = UsersMapStateToPropsType & UsersMapDispatchToPropsType;\n\ninterface UsersListState {\n\tselectedUsersStatus: string;\n}\n\nexport class Users extends Component<UsersContainerPropsType, UsersListState> {\n\n\tconstructor(props: UsersContainerPropsType) {\n\t\tsuper(props);\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { currentPage, pageSize } = this.props;\n\t\tthis.props.requestUsers(currentPage, pageSize);\n\t}\n\n\thandleChangePage = (page: number) => {\n\t\tconst { pageSize } = this.props;\n\t\tthis.props.requestUsers(page, pageSize);\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<UsersList\n\t\t\t\tonChangePage={this.handleChangePage}\n\t\t\t\t{...this.props}\n\t\t\t/>\n\t\t)\n\t}\n}\n\n\nconst mapStateToProps = (state: rootStoreType): UsersMapStateToPropsType => {\n\treturn {\n\t\tusers: getUsers(state),\n\t\tpageSize: getPageSize(state),\n\t\tcurrentPage: getCurrentPage(state),\n\t\tportionSize: getportionSize(state),\n\t\ttotalUsersCount: getTotalUsersCount(state)\n\t}\n}\n\nconst mapDispatchToProps: UsersMapDispatchToPropsType = {\n\tfollowUser: followAction,\n\tunfollowUser: unFollowAction,\n\tdragUser: dragUserAction,\n\trequestUsers\n}\n\nexport const UsersContainer = compose<ComponentType>(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Users);\n","import { rootStoreType } from \"../../app/store\";\n\nexport const getRequestStatus = (state: rootStoreType) => state.loader.status;"],"names":["mapStateToProps","state","isAuth","getIsAuthUser","withAuthRedirect","Component","connect","props","rest","_jsx","Navigate","to","getUsers","usersPage","users","getportionSize","portionSize","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getFollowingInProgress","followingInProgress","UserCard","styled","div","_templateObject","_taggedTemplateLiteral","theme","colors","border","UserDetails","_templateObject2","UserPhotoWrapper","_templateObject3","UserPhoto","img","_templateObject4","primary","UserInfo","_templateObject5","UserName","span","_templateObject6","UserStatus","_templateObject7","secondaryFont","SubscriptionButton","Button","_templateObject8","DraggableButton","_templateObject9","DraggableIcon","_templateObject10","User","user","id","name","photos","status","followed","attributes","listeners","setNodeRef","transform","transition","useSortable","dispatch","useAppDispatch","useSelector","styles","CSS","Transform","toString","handleSubscribeUser","userId","follow","_jsxs","ref","style","children","NavLink","concat","src","small","defaultUser","renderSubscriptionButton","disabled","some","onClick","unFollow","draggableUsersIcon","SortableWrapper","_ref","items","SortableContext","strategy","verticalListSortingStrategy","PaginationContainer","PageNumber","active","Ellipsis","PaginationButton","PaginationDirectionIcon","Pagination","totalPages","onChange","portionNumber","setPortionNumber","useState","pages","pagesCount","Math","ceil","Array","from","length","_","i","portionCount","leftPortionPageNumber","rightPortionPageNumber","isPrevButton","isNextButton","handleChangePage","page","paginationRange","useMemo","min","leftSiblingIndex","max","shouldShowRightDots","result","push","range","start","end","idx","handleChangePrevPage","leftArrow","map","index","Number","handleChangeNextPage","rightArrow","UsersContainer","ContentContainer","UsersSubscriptionSelect","Select","StyledText","StyledOptions","UsersContent","usersStatus","all","unfollowed","UsersList","followUser","unfollowUser","dragUser","onChangePage","selectedUsersStatus","setSelectedUsersStatus","requestStatus","getRequestStatus","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","usersStatusOptions","Object","entries","key","value","label","handleUnSubscribeUser","option","String","options","Preloader","_Fragment","DndContext","collisionDetection","closestCenter","modifiers","restrictToParentElement","onDragEnd","event","over","oldIndex","findIndex","newIndex","newUsers","arrayMove","onFollowUser","onUnfollowUser","renderPagination","Users","constructor","super","this","requestUsers","componentDidMount","render","mapDispatchToProps","followAction","unFollowAction","dragUserAction","compose","loader"],"sourceRoot":""}